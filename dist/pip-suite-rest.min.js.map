{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/auth_state/AuthHttpResponseInterceptor.ts","src/auth_state/AuthStateDecorator.ts","src/auth_state/AuthStateInit.ts","src/auth_state/AuthStateService.ts","src/auth_state/IAuthStateService.ts","src/auth_state/index.ts","src/cache/DataCacheService.ts","src/cache/IDataCacheService.ts","src/cache/index.ts","src/data/DataModelService.ts","src/data/index.ts","src/index.ts","src/rest/RestService.ts","src/rest/index.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","rest","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","Object","defineProperty","value","UnauthorizedRedirect","AccessDenyRedirect","AuthHttpResponseInterceptor","$inject","$q","$rootScope","$location","$log","_this","responseError","rejection","toState","services","StateVar","name","toParams","params","status","error","$emit","redirect_to","url","reject","configureAuthState","$httpProvider","interceptors","push","decorateStatesAuthStateService","IAuthStateService_1","$delegate","$timeout","config","AuthStateConfig","signinState","_config","signoutState","authorizedState","unauthorizedState","goToSignin","server_url","email","language","setSigninParams","go","goToSignout","goToAuthorized","goToUnauthorized","addStatesAuthtateDecorator","$provide","decorator","3","initAuthState","$state","pipSession","pipAuthState","$on","event","fromState","fromParams","redirect","auth","undefined","isOpened","preventDefault","redirectTo","href","substring","RoutingVar","pipTranslateProvider","translations","ERROR_SWITCHING","run","prototype","_redirectedStates","set","$get","_service","state","_","isNull","transitionTo","location","AuthStateProvider","$stateProvider","stateName","stateConfig","authenticate","resolve","5","6","__export","m","hasOwnProperty","angular","./AuthStateDecorator","./AuthStateInit","./AuthStateService","./IAuthStateService","7","DataCache","hash","data","filteredData","filter","search","start","take","skip","serializedFilter","toJson","h","len","charCodeAt","generateKey","resource","clear","_cache","key","startsWith","retrieve","holder","expire","now","CACHE_TIMEOUT","store","storePermanently","remove","updateOne","item","isAdded","size","id","retrieveOrLoad","successCallback","errorCallback","method","result","force","deferred","defer","paging","singleResult","isFunction","updatedItem","err","promise","removeOne","isArray","splice","decorateAddCallback","notClearedCache","decorateRemoveCallback","setTimeout","newTimeout","pipDataModel","DataCacheProvider","provider","8","CacheParams","9","./IDataCacheService","10","execute","tid","transaction","skipTransactionBegin","transactionId","begin","transactionOperation","pipRest","getResource","operation","aborted","skipTransactionEnd","end","create","itemCollection","update","index","findIndex","delete","object","read","readOne","page","uploadFiles","pictures","documents","content","obj","callback","save","saveResult","DataModel","abortFilesUpload","abort","$stateParams","query","readPage","queryPage","DataModelProvider","11","./DataModelService","./IDataModelService","13","./cache","./data","./rest","14","15","reInitResource","resourceConfigs","initResources","resourceConfig","createResource","_serverUrl","path","defaultParams","actions","createOperation","createCollection","createPagedCollection","createPartyCollection","_resources","RestService","$resource","paramDefaults","party_id","get","_lockServerUrl","enumerable","configurable","setHeaders","headers","header","isObject","$http","defaults","common","serverUrl","lockServerUrl","RestProvider","_http","registerResource","_resourceConfigs","registerOperation","registerCollection","registerPagedCollection","registerPartyCollection"],"mappings":"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","file":"pip-suite-rest.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { IAuthState } from './IAuthStateService';\nexport const UnauthorizedRedirect: string = 'pipUnauthorizedRedirect';\nexport const AccessDenyRedirect: string = 'pipAccessDenyRedirect';\n\nclass AuthHttpResponseInterceptor implements ng.IHttpInterceptor {\n    constructor(\n        private $q: ng.IQService, \n        private $rootScope: ng.IRootScopeService,\n        private $location: ng.ILocationService,\n        private $log: ng.ILogService\n    ) {\n        \"ngInject\";\n    }\n\n    public responseError = (rejection: any): ng.IPromise<any> => {\n        let toState: IAuthState = this.$rootScope[pip.services.StateVar] && this.$rootScope[pip.services.StateVar].name ? this.$rootScope[pip.services.StateVar].name : null;\n        let toParams: any = this.$rootScope[pip.services.StateVar] && this.$rootScope[pip.services.StateVar].params ? this.$rootScope[pip.services.StateVar].params : null;\n        // When server sends Non-authenticated response\n        switch (rejection.status) {\n            case 401:\n            case 440:\n                this.$log.error(\"Response Error 401\", rejection);\n                // Redirect to unauthorized state\n                this.$rootScope.$emit(UnauthorizedRedirect, { // todo var event end event params\n                    redirect_to: toState && toParams && toParams.redirect_to ? '' : this.$location.url(),\n                    toState: toState,\n                    toParams: toParams\n                });\n\n                break;\n            case 403:\n                this.$log.error(\"Response Error 403\", rejection);\n                // Redirect to unauthorized state\n                this.$rootScope.$emit(AccessDenyRedirect);\n\n                break;                \n            default:\n                this.$log.error(\"errors_unknown\", rejection);\n                break;\n        }\n\n        return this.$q.reject(rejection);\n    }\n}\n\nfunction configureAuthState($httpProvider: ng.IHttpProvider) {\n    $httpProvider.interceptors.push('pipAuthHttpResponseInterceptor');\n}\n\nangular\n    .module('pipAuthState')\n    .config(configureAuthState)\n    .service('pipAuthHttpResponseInterceptor', AuthHttpResponseInterceptor);\n\n\n\n","import { AuthStateConfig } from './IAuthStateService';\n\n// Decorator function to add redirect method to pipAuthState service\nfunction decorateStatesAuthStateService($delegate, $timeout) {\n    \"ngInject\";\n\n    $delegate.config = new AuthStateConfig();\n    $delegate.signinState = signinState;\n    $delegate.signoutState = signoutState;\n    $delegate.authorizedState = authorizedState;\n    $delegate.unauthorizedState = unauthorizedState;\n\n    $delegate.goToSignin = goToSignin;\n    $delegate.goToSignout = goToSignout;\n    $delegate.goToAuthorized = goToAuthorized;\n    $delegate.goToUnauthorized = goToUnauthorized;\n\n    return $delegate;\n    ////////////////////////////////\n\n    function signinState(value?: string): string {\n        if (value) {\n            this._config.signinState = value;\n        } return this._config.signinState;\n    }\n    function signoutState(value?: string): string {\n        if (value) {\n            this._config.signoutState = value;\n        } return this._config.signoutState;\n    }\n    function authorizedState(value?: string): string {\n        if (value) {\n            this._config.authorizedState = value;\n        } return this._config.authorizedState;\n    }\n    function unauthorizedState(value?: string): string {\n        if (value) {\n            this._config.unauthorizedState = value;\n        } return this._config.unauthorizedState;\n    }\n\n    function setSigninParams(params: any): any {\n        if (!params) return params;\n\n        if (!params.toParams) return params;\n\n        params.server_url = params.toParams.server_url ? params.toParams.server_url : null;\n        params.email = params.toParams.email ? params.toParams.email : null;\n        params.language = params.toParams.language ? params.toParams.language : 'en';\n\n        return params;\n    }\n\n    function goToSignin(params: any): void {\n        if (this._config.signinState == null) {\n            throw new Error('Signin state was not defined');\n        }\n\n        params = setSigninParams(params);\n        this.go(this._config.signinState, params);\n    }\n    function goToSignout(params: any): void {\n        if (this._config.signoutState == null) {\n            throw new Error('Signout state was not defined');\n        }\n\n        this.go(this._config.signoutState, params);\n    }\n    function goToAuthorized(params: any): void {\n        if (this._config.authorizedState == null) {\n            throw new Error('Authorized state was not defined');\n        }\n\n        this.go(this._config.authorizedState, params);\n    }\n    function goToUnauthorized(params: any): void {\n        if (this._config.unauthorizedState == null) {\n            throw new Error('Signin state was not defined');\n        }\n\n        this.go(this._config.unauthorizedState, params);\n    }\n}\n\n// Config function to decorate pipAuthState service\nfunction addStatesAuthtateDecorator($provide) {\n    \"ngInject\";\n\n    $provide.decorator('pipAuthState', decorateStatesAuthStateService);\n}\n\nangular\n    .module('pipAuthState')\n    .config(addStatesAuthtateDecorator);\n\n","import { IAuthStateService, IAuthState } from './IAuthStateService';\n\nfunction initAuthState(\n    $log: ng.ILogService,\n    $rootScope: ng.IRootScopeService,\n    $state: ng.ui.IStateService,\n    pipSession: pip.services.ISessionService,\n    pipAuthState: IAuthStateService\n\n) {\n\n    // Intercept routes\n    $rootScope.$on('$stateChangeStart', stateChangeStart);\n    // Process unauthorized access error\n    $rootScope.$on('pipUnauthorizedRedirect', unauthorizedRedirect);\n    // Process after state changed\n    $rootScope.$on('$stateChangeSuccess', stateChange);\n\n    function stateChange(event: ng.IAngularEvent, toState: angular.ui.IState,\n        toParams: any, fromState: angular.ui.IState, fromParams: any): void {\n        // Unset routing variable to disable page transition\n        $rootScope[pip.services.RoutingVar] = false;\n    }\n\n    function stateChangeStart(event: ng.IAngularEvent, toState: IAuthState, toParams: any,\n        fromState: IAuthState, fromParams: any): void {\n\n        // Implement redirect mechanism\n        if (pipAuthState.redirect && pipAuthState.redirect(event, toState, toParams, $rootScope)) {\n            return;\n        }\n\n        // If user is not authorized then switch to signin\n        if ((toState.auth || toState.auth === undefined) && !pipSession.isOpened()) {\n            event.preventDefault();\n\n            let redirectTo: string = pipAuthState.href(toState.name, toParams);\n\n            // Remove hashtag\n            if (redirectTo.length > 0 && redirectTo[0] == '#') {\n                redirectTo = redirectTo.substring(1);\n            }\n\n        //    <IAuthStateService>\n           pipAuthState.goToSignin({ redirect_to: redirectTo, toState: toState, toParams: toParams });\n\n            return;\n        }\n\n        // Move user to authorized page\n        if (toState.name == pipAuthState.unauthorizedState() && pipSession.isOpened()) {\n            event.preventDefault();\n            pipAuthState.goToAuthorized({});\n\n            return;\n        }\n    }\n\n    function unauthorizedRedirect(event: ng.IAngularEvent, params: any): void {\n        // pipAuthState.goToSignin(params);\n        pipAuthState.goToSignout(params);\n    }\n\n}\n\nfunction configureAuthState(pipTranslateProvider: pip.services.ITranslateProvider) {\n    // Switch to HTML5 routing mode\n    pipTranslateProvider.translations('en', {\n        'ERROR_SWITCHING': 'Error while switching route. Try again.'\n    });\n\n    pipTranslateProvider.translations('ru', {\n        'ERROR_SWITCHING': 'Ошибка при переходе. Попробуйте ещё раз.'\n    });\n}\n\nangular\n    .module('pipAuthState')\n    .config(configureAuthState)\n    .run(initAuthState);\n\n","import { IAuthStateService, IAuthStateProvider, AuthStateConfig, IAuthState } from './IAuthStateService';\n\nclass AuthStateProvider implements IAuthStateProvider {\n    private _service: IAuthStateService;\n    private _config: AuthStateConfig;\n    private _redirectedStates: any = {};\n\n    public state: Function;\n\n    constructor(\n        private $stateProvider: ng.ui.IStateProvider\n    ) {\n        \"ngInject\";\n\n        this._config = new AuthStateConfig();\n\n\n        this.state = (stateName: string, stateConfig: IAuthState) => {\n            if (stateName == null) {\n                throw new Error('stateName cannot be null');\n            }\n            if (stateConfig == null) {\n                throw new Error('stateConfig cannot be null');\n            }\n\n            // add resolver\n            if (stateConfig && (stateConfig.auth || stateConfig.authenticate)) {\n                stateConfig.resolve = stateConfig.resolve || {};\n            }\n\n            this.$stateProvider.state(stateName, stateConfig);\n\n            return this;\n        }\n    }\n\n    public redirect(fromState: string, toState: string) {\n        this._redirectedStates[fromState] = toState;\n    }\n\n    public get signinState(): string {\n        return this._config.signinState;\n    }\n\n    public set signinState(value: string) {\n        this._config.signinState = value || null;\n    }\n\n    public get signoutState(): string {\n        return this._config.signoutState;\n    }\n\n    public set signoutState(value: string) {\n        this._config.signoutState = value || null;\n    }\n    public get authorizedState(): string {\n        return this._config.authorizedState;\n    }\n\n    public set authorizedState(value: string) {\n        this._config.authorizedState = value || '/';\n    }\n    public get unauthorizedState(): string {\n        return this._config.unauthorizedState;\n    }\n\n    public set unauthorizedState(value: string) {\n        this._config.unauthorizedState = value || '/';\n    }\n\n    public $get($state: ng.ui.IStateService, $timeout: ng.ITimeoutService) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            $state['_config'] = this._config;\n            $state['_redirectedStates'] = this._redirectedStates;\n            $state['redirect'] = redirect;\n        }\n\n        this._service = <IAuthStateService>$state;\n\n        return this._service;\n\n        function redirect(event, state, params) {\n            let toState = this._redirectedStates[state.name];\n            if (_.isFunction(toState)) {\n                toState = toState(state.name, params);\n\n                if (_.isNull(toState))\n                    throw new Error('Redirected toState cannot be null');\n            }\n            if (!!toState) {\n                $timeout(() => {\n                    event.preventDefault();\n                    this.transitionTo(toState, params, { location: 'replace' });\n                });\n\n                return true;\n            }\n\n            return false;\n        }\n    }\n}\n\nangular\n    .module('pipAuthState')\n    .provider('pipAuthState', AuthStateProvider);","export interface IAuthState extends angular.ui.IState {\n    auth?: boolean;\n    authenticate?: any;\n}\n\nexport class AuthStateConfig {\n    signinState: string = null;\n    signoutState: string = null;\n    authorizedState: string = '/';\n    unauthorizedState: string = '/';\n}\n\nexport interface IAuthStateService extends ng.ui.IStateService  {\n    signinState(value?: string): string;\n    signoutState(value?: string): string;\n    authorizedState(value?: string): string;\n    unauthorizedState(value?: string): string;\n\n    redirect(event: ng.IAngularEvent, toState: IAuthState, toParams: any, $rootScope: ng.IRootScopeService): any;\n    state(stateName: string, stateConfig: IAuthState): any;\n\n    goToSignin(params: any): void;\n    goToSignout(params: any): void;\n    goToAuthorized(params: any): void;\n    goToUnauthorized(params: any): void;\n}\n\nexport interface IAuthStateProvider extends ng.IServiceProvider {\n    redirect(fromState: string, toState: string);\n    signinState: string;\n    signoutState: string;\n    authorizedState: string;\n    unauthorizedState: string;\n}\n\n","angular\n    .module('pipAuthState', [\n        'ngResource',\n        'pipServices', \n        'LocalStorageModule'\n    ]);\n\n\nimport './AuthHttpResponseInterceptor';\nimport './AuthStateDecorator';\nimport './AuthStateInit';\nimport './IAuthStateService';\nimport './AuthStateService';\n\n\n\nexport * from './AuthHttpResponseInterceptor'\nexport * from './IAuthStateService'\n","import { CacheParams, IDataCacheService, IDataCacheProvider } from './IDataCacheService';\nimport { IDataModelService } from '../data/IDataModelService';\n\nclass DataCache implements IDataCacheService {\n    private CACHE_TIMEOUT = 10 * 60000; // 10 mins or make it configurable\n    private _cache: any;\n    private _timeout: number;\n\n    public constructor(\n        private $q: ng.IQService, \n        private pipDataModel: IDataModelService\n    ) {\n        \"ngInject\";\n\n        this._cache = {};\n    }\n\n    // Converts a string value into a numeric hash code\n    private hash(data: CacheParams): number {\n        let filteredData: CacheParams = <CacheParams>{};\n\n        // Filter only the generic parameters that can be relevant to the query\n        if (data != null) {\n            // filteredData.item = data.item;\n            // filteredData.id = data.id;\n            filteredData.filter = data.filter;\n            filteredData.search = data.search;\n            filteredData.start = data.start;\n            filteredData.take = data.take;\n            filteredData.skip = data.skip;\n            // filteredData.status = data.status;\n        }\n\n        let serializedFilter = angular.toJson(filteredData);\n\n        if (serializedFilter == null || serializedFilter.length === 0)\n            return 0;\n\n        let h: number = 0;\n        for (let i = 0, len = serializedFilter.length; i < len; i++) {\n            let chr = serializedFilter.charCodeAt(i);\n            h = ((h << 5) - h) + chr;\n            h |= 0; // Convert to 32bit integer\n        }\n\n        return h;\n    }\n\n    // Generates parameterized key\n    private generateKey(resource: string, params?: CacheParams): string {\n        let h: number = this.hash(params);\n        return resource + (h != 0 ? '_' + h : '');\n    };\n\n    // Clear the cache, globally or selectively\n    public clear(resource?: string): void {\n        if (resource == null) {\n            this._cache = {};\n        } else {\n            for (let key in this._cache) {\n                if (key == resource || key.startsWith(resource + '_')) {\n                    delete this._cache[key];\n                }\n            }\n        }\n    }\n\n    // Try to retrieve collection from the cache\n    public retrieve(resource: string, params?: CacheParams): any {\n        if (resource == null) throw new Error('Resource cannot be null');\n        if (resource == '') throw new Error('Resource cannot be empty');\n\n        let key: string = this.generateKey(resource, params);\n        let holder: any = this._cache[key];\n        if (holder == null) return null;\n\n        // If expired then cleanup and return null\n        if (holder.expire && _.now() - holder.expire > this.CACHE_TIMEOUT) {\n            delete this._cache[key];\n            return null;\n        }\n\n        return holder.data;\n    }\n\n    // Store collection into the cache\n    public store(resource: string, data: any, params?: CacheParams): void {\n        if (resource == null) throw new Error('Resource cannot be null');\n        if (resource == '') throw new Error('Resource cannot be empty');\n\n        this._cache[this.generateKey(resource, params)] = {\n            expire: _.now(),\n            data: data\n        };\n    }\n\n    // Store collection into the cache without expiration\n    public storePermanently(resource: string, data: any, params?: CacheParams): void {\n        if (resource == null) throw new Error('Resource cannot be null');\n        if (resource == '') throw new Error('Resource cannot be empty');\n\n        this._cache[this.generateKey(resource, params)] = {\n            expire: null,\n            data: data\n        };\n    }\n\n    // Remove collection from the cache\n    public remove(resource: string, params?: CacheParams): void {\n        if (resource == null) throw new Error('Resource cannot be null');\n        if (resource == '') throw new Error('Resource cannot be empty');\n\n        delete this._cache[this.generateKey(resource, params)];\n    };\n\n    public updateOne(resource: string, item: any, params?: CacheParams): void {\n        if (resource == null) throw new Error('Resource cannot be null');\n        if (item == null) return;\n\n        let data: any = this.retrieve(resource, params);\n\n        if (data != null) {\n            let isAdded = false;\n            let size = data.length;\n            for (let i = 0; i < size; i++) {\n                if (data[i].id == item.id) {\n                    data[i] = item;\n                    isAdded = true;\n\n                    return;\n                }\n            }\n            if (!isAdded) data.push(item);\n            this.store(resource, data, params);\n        }\n    }\n\n    // Tries to retrieve collection from the cache, otherwise load it from server\n    public retrieveOrLoad(params: CacheParams, successCallback?: (data: any) => void, errorCallback?: (err: any) => void): any {\n        if (params == null) throw new Error('params cannot be null');\n\n        let resource: string = params.resource; //(params.cache || params.resource);\n\n        // Retrieve data from cache\n        let filter: Function = params.filter;\n        let force: boolean = !!params.force;\n        let result: any = !force ? this.retrieve(resource, params) : null;\n        let deferred: any = this.$q.defer();\n        let method: string;\n        if (!!params.paging) {\n            method = 'page';\n        } else {\n            method = params.singleResult ? 'readOne' : 'read';\n        }\n        // Return result if it exists\n        if (result) {\n            if (filter) {\n                if (result.data) {\n                    result.data = filter(result.data);\n                } else {\n                    result = filter(result);\n                }\n            }\n            if (_.isFunction(successCallback)) { successCallback(result); }\n            deferred.resolve(result);\n\n            return deferred.promise;\n        }\n\n        this.pipDataModel[method](\n            params,\n            (data: any) => {\n                // Store data in cache and return\n                params.updatedItem ?\n                    this.updateOne(resource, data, params) :\n                    this.store(resource, data, params);\n                if (filter) data = filter(data);\n                deferred.resolve(data);\n\n                if (_.isFunction(successCallback)) { successCallback(data); }\n            },\n            (err: any) => {\n                // Return error\n                deferred.reject(err);\n                if (_.isFunction(errorCallback)) errorCallback(err);\n            }\n        );\n\n        // Return deferred object\n        return deferred.promise;\n    }\n\n    public removeOne(resource: string, item: any): void {\n        if (resource == null) throw new Error('Resource cannot be null');\n        if (item == null) return;\n\n        for (let key in this._cache) {\n            if (key == resource || key.startsWith(resource + '_')) {\n                let data: any = this._cache[key].data;\n                if (angular.isArray(data)) {\n                    for (let i = 0; i < data.length; i++) {\n                        if (data[i].id == item.id) {\n                            data.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // OBSOLETE - WILL BE REMOVED ONCE CODE IS REFACTORED\n    public decorateAddCallback(resource: string, params?: CacheParams, successCallback?: (data: any) => void): Function {\n        return (item: any) => {\n            if (!params || !params.notClearedCache) { this.clear(resource); }\n            if (_.isFunction(successCallback)) { successCallback(item); }\n        };\n    }\n\n    public decorateRemoveCallback(resource: string, params?: CacheParams, successCallback?: (data: any) => void): Function {\n        return (item: any) => {\n            this.removeOne(resource, params);\n            if (_.isFunction(successCallback)) { successCallback(item); }\n        };\n    }\n\n    public decorateUpdateCallback(resource: string, params?: CacheParams, successCallback?: (data: any) => void): Function {\n        return (item: any) => {\n            for (var key in this._cache) {\n                if (key == resource || key.startsWith(resource + '_')) {\n                    let data: any = this._cache[key].data;\n                    if (angular.isArray(data)) {\n                        for (var i = 0; i < data.length; i++) {\n                            if (data[i].id == item.id) {\n                                data[i] = item;\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (_.isFunction(successCallback)) { successCallback(item); }\n        };\n    }\n\n    public setTimeout(newTimeout: number): number {\n        if (newTimeout) {\n            this.CACHE_TIMEOUT = newTimeout;\n        }\n        return this.CACHE_TIMEOUT;\n    }\n \n}\n\nclass DataCacheProvider implements IDataCacheProvider {\n    private _service: DataCache;\n\n    constructor() {\n    }\n\n    public $get($q: ng.IQService, pipDataModel: IDataModelService) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new DataCache($q, pipDataModel);\n        }\n        return this._service;\n    }\n}\n\nangular\n    .module('pipDataCache', [])\n    .provider('pipDataCache', DataCacheProvider);\n\n\n","export class CacheParams {\n    force?: boolean;\n    resource?: string;\n    // cache?: string; cache || resource\n    filter?: Function;\n    singleResult?: boolean;\n    // party_id: string;\n    // item?: any;\n    // id?: string;\n    search?: string;\n    start?: any;\n    take?: number;\n    skip?: number;\n    // status?: string;\n    notClearedCache?: boolean;\n    paging?: boolean;\n    updatedItem?: any;\n}\n\nexport interface IDataCacheService {\n    setTimeout(newTimeout: number): number;\n\n    store(resource: string, data: any, params?: CacheParams): void;\n    storePermanently(resource: string, data: any, params?: CacheParams): void;\n    retrieve(resource: string, params?: CacheParams): any;\n    retrieveOrLoad(params: CacheParams, successCallback?: (data: any) => void, errorCallback?: (err: any) => void): any;\n    updateOne(resource: string, item: any, params?: CacheParams): void;\n    remove(resource: string, params?: CacheParams): void;\n    removeOne(resource: string, item: any): void;\n    clear(resource?: string): void;\n\n    decorateAddCallback(resource: string, params?: CacheParams, successCallback?: (data: any) => void): Function;\n    decorateUpdateCallback(resource: string, params?: CacheParams, successCallback?: (data: any) => void): Function;\n    decorateRemoveCallback(resource: string, params?: CacheParams, successCallback?: (data: any) => void): Function;\n}\n\nexport interface IDataCacheProvider extends ng.IServiceProvider {}","angular\n    .module('pipDataCache', ['pipDataModel']);\n\nimport './DataCacheService';\nimport './IDataCacheService';\n\nexport * from './IDataCacheService';","import { IDataModelService, IDataModelProvider } from './IDataModelService';\nimport { IRestService } from '../rest/IRestService'\n\ndeclare var async: any;\n\n// Todo: Shall it be just an abstract class?\n// Todo: Use generics to make it type-safe\nclass DataModel implements IDataModelService {\n    public save;\n    public remove;\n    public query;\n    public get;\n    public readPage;\n    public queryPage;\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: IRestService\n    ) {\n        \"ngInject\";\n        \n        this.save = this.update;\n        this.remove = this.delete;\n        this.query = this.read;\n        this.get = this.readOne;\n        this.readPage = this.page;\n        this.queryPage = this.page;\n    }\n\n    // Execute request to REST API\n    public execute(params: any, successCallback?: (result: any) => void,\n        errorCallback?: (error: any) => void): ng.IPromise<{}> {\n\n        let t = params.transaction, tid;\n\n        if (t && !params.skipTransactionBegin) {\n            tid = params.transactionId = t.begin(\n                params.transactionOperation || 'PROCESSING'\n            );\n            if (!tid) return;\n        }\n\n        // return this.pipRest.resources[params.resource]()[params.operation](\n        return this.pipRest.getResource(params.resource)[params.operation](\n            params.item,\n            (result: any) => {\n                if (t && tid && t.aborted(tid)) return;\n                if (t && !params.skipTransactionEnd) t.end();\n                if (successCallback) successCallback(result);\n            },\n            (error: any) => {\n                if (t) t.end(error);\n                if (errorCallback) errorCallback(error);\n            }\n        );\n    }\n\n    // Create an object and add it to object collection\n    public create(params: any, successCallback?: (result: any) => void,\n        errorCallback?: (error: any) => void): ng.IPromise<{}> {\n\n        params.transactionOperation = params.transactionOperation || 'SAVING';\n        params.operation = params.operation || 'save';\n\n        return this.execute(\n            params,\n            (result: any) => {\n                if (params.itemCollection)\n                    params.itemCollection.push(result);\n\n                if (successCallback) successCallback(result);\n            },\n            (error: any) => {\n                if (errorCallback) errorCallback(error);\n            }\n        );\n    }\n\n    // Update an object and replace it in object collection\n    public update(params: any, successCallback?: (result: any) => void,\n        errorCallback?: (error: any) => void): ng.IPromise<{}> {\n\n        params.transactionOperation = params.transactionOperation || 'SAVING';\n        params.operation = params.operation || 'update';\n\n        return this.execute(\n            params,\n            (result: any) => {\n                if (params.itemCollection)\n                    var index = _.findIndex(params.itemCollection, function (item: any) {\n                        return item.id == result.id;\n                    });\n                if (index > -1) {\n                    params.itemCollection[index] = result;\n                }\n\n                if (successCallback) successCallback(result);\n            },\n            (error: any) => {\n                if (errorCallback) errorCallback(error);\n            }\n        );\n    }\n\n    // Update an object and remove it from object collection\n    public delete(params: any, successCallback?: (result: any) => void,\n        errorCallback?: (error: any) => void): ng.IPromise<{}> {\n\n        params.transactionOperation = params.transactionOperation || 'SAVING';\n        params.operation = params.operation || 'remove';\n\n        return this.execute(\n            params,\n            (result: any) => {\n                if (params.itemCollection)\n                    _.remove(params.itemCollection, { id: result.id || (params.object || {}).id || (params.item || {}).id });\n\n                if (successCallback) successCallback(result);\n            },\n            (error: any) => {\n                if (errorCallback) errorCallback(error);\n            }\n        );\n    }\n\n    // Read a collection of objects\n    public read(params: any, successCallback?: (result: any) => void,\n        errorCallback?: (error: any) => void): ng.IPromise<{}> {\n\n        params.transactionOperation = params.transactionOperation || 'READING';\n        params.operation = params.operation || 'query';\n\n        return this.execute(\n            params,\n            (result: any) => {\n                if (successCallback) successCallback(result);\n            },\n            (error: any) => {\n                if (errorCallback) errorCallback(error);\n            }\n        );\n    }\n\n    // Read a single object and add it into collection\n    public readOne(params: any, successCallback?: (result: any) => void,\n        errorCallback?: (error: any) => void): ng.IPromise<{}> {\n\n        params.transactionOperation = params.transactionOperation || 'READING';\n        params.operation = params.operation || 'page';\n\n        return this.execute(\n            params,\n            (result: any) => {\n                if (params.itemCollection && result) {\n                    var index = _.findIndex(params.itemCollection, { id: result.id });\n                    if (index >= 0) params.itemCollection[index] = result;\n                    else params.itemCollection.push(result);\n                }\n\n                if (successCallback) successCallback(result);\n            },\n            (error: any) => {\n                if (errorCallback) errorCallback(error);\n            }\n        );\n    }\n\n    // Read a page and add results into object collection\n    public page(params: any, successCallback?: (result: any) => void,\n        errorCallback?: (error: any) => void): ng.IPromise<{}> {\n\n        params.transactionOperation = params.transactionOperation || 'READING';\n        params.operation = params.operation || 'page';\n\n        return this.execute(\n            params,\n            (result: any) => {\n                if (params.itemCollection && result.data) {\n                    for (var i = 0; i < result.data.length; i++)\n                        params.itemCollection.push(result.data[i]);\n                }\n\n                if (successCallback) successCallback(result);\n            },\n            (error: any) => {\n                if (errorCallback) errorCallback(error);\n            }\n        );\n    }\n\n    // Save picture and document files\n    public uploadFiles(params: any, successCallback?: () => void,\n        errorCallback?: (error: any) => void): ng.IPromise<{}> {\n\n        var t = params.transaction, tid;\n\n        // Start transaction if necessary\n        if (t && !params.skipTransactionBegin) {\n            tid = params.transactionId = t.begin(\n                params.transactionOperation || 'SAVING'\n            );\n            if (!tid) return;\n        }\n\n        var uploadFiles = [{\n            pictures: params.pictures,\n            documents: params.documents\n        }];\n\n        // from content\n        if (params.item && params.item.content) {\n            var saveResult = true;\n            async.eachSeries(_.union(params.item.content, uploadFiles),\n                (obj, callback) => {\n                    // не выбран - пропускаем этот item  || нет этого события action\n                    if (!obj.pictures && !obj.documents) {\n                        callback();\n                    } else {\n                        if (obj.pictures) {\n                            // Save pictures first\n                            obj.pictures.save(\n                                () => {\n                                    if (t && tid && t.aborted(tid)) {\n                                        saveResult = false;\n                                        callback('aborted');\n                                    }\n                                    // Save documents second\n                                    if (obj.documents) {\n                                        obj.documents.save(\n                                            () => {\n                                                if (t && tid && t.aborted(tid)) {\n                                                    saveResult = false;\n                                                    callback('aborted');\n                                                }\n                                                callback();\n                                            },\n                                            (error: any) => {\n                                                saveResult = false;\n                                                callback(error);\n                                            }\n                                        );\n                                    } else {\n                                        callback();\n                                    }\n                                },\n                                (error: any) => {\n                                    saveResult = false;\n                                    callback(error);\n                                }\n                            );\n                        } else {\n                            if (obj.documents) {\n                                // Save documents first\n                                obj.documents.save(\n                                    () => {\n                                        if (t && tid && t.aborted(tid)) {\n                                            saveResult = false;\n                                            callback('aborted');\n                                        }\n                                        callback();\n                                    },\n                                    (error: any) => {\n                                        saveResult = false;\n                                        callback(error);\n                                    }\n                                );\n                            }\n                        }\n                    }\n                },\n                (error: any) => {\n                    if (!error && saveResult) {\n                        // удаляем ненужные объекты перед сохранением\n                        // вызываем колбек\n                        if (t && !params.skipTransactionEnd) t.end();\n                        _.each(params.item.content, function (item) {\n                            delete item.pictures;\n                            delete item.documents;\n                        });\n                        if (successCallback) successCallback();\n                    } else {\n                        // вызываем ошибочный колбек\n                        if (t) t.end(error);\n                        if (errorCallback) {\n                            errorCallback(error);\n                        }\n                    }\n                }\n            );\n        } else {\n            if (params.pictures) {\n                // Save pictures first\n                params.pictures.save(\n                    () => {\n                        if (t && tid && t.aborted(tid)) return;\n\n                        // Save documents second\n                        if (params.documents) {\n                            params.documents.save(\n                                () => {\n                                    if (t && tid && t.aborted(tid)) return;\n                                    // Do everything else\n                                    if (t && !params.skipTransactionEnd) t.end();\n                                    if (successCallback) successCallback();\n                                },\n                                (error: any) => {\n                                    if (t) t.end(error);\n                                    if (errorCallback) errorCallback(error);\n                                }\n                            );\n                        } else {\n                            // Do everything else\n                            if (t && !params.skipTransactionEnd) t.end();\n                            if (successCallback) successCallback();\n                        }\n                    },\n                    (error: any) => {\n                        if (t) t.end(error);\n                        if (errorCallback) errorCallback(error);\n                    }\n                );\n            } else if (params.documents) {\n                // Save documents first\n                params.documents.save(\n                    () => {\n                        if (t && tid && t.aborted(tid)) return;\n                        // Do everything else\n                        if (t && !params.skipTransactionEnd) t.end();\n                        if (successCallback) successCallback();\n                    },\n                    (error: any) => {\n                        if (t) t.end(error);\n                        if (errorCallback) errorCallback(error);\n                    }\n                );\n            } else {\n                // Do everything else\n                if (t && !params.skipTransactionEnd) t.end();\n                if (successCallback) successCallback();\n            }\n        }\n    }\n\n    // Abort transaction with file upload\n    public abortFilesUpload(params) {\n        if (params.pictures)\n            params.pictures.abort();\n        if (params.documents)\n            params.documents.abort();\n        if (params.transaction)\n            params.transaction.abort();\n    }\n}\n\nclass DataModelProvider implements IDataModelProvider {\n    private _service: IDataModelService;\n\n    constructor(\n    ) {\n        \"ngInject\";\n\n    }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: IRestService\n    ) {\n        \"ngInject\";\n        \n        if (this._service == null) {\n            this._service = new DataModel($stateParams, pipRest);\n        }\n\n        return this._service;\n    }\n}\n\nangular\n    .module('pipDataModel')\n    .provider('pipDataModel', DataModelProvider);","angular\n    .module('pipDataModel', ['pipRest']);\n\nimport './IDataModelService';\nimport './DataModelService';\n\nexport * from './IDataModelService';","\nimport './rest';\nimport './data';\nimport './cache';\nimport './auth_state';\n\nangular\n    .module('pipCommonRest', [\n        'pipDataCache',\n        'pipRest',\n        'pipDataModel',\n        'pipAuthState'\n\n    ]);\n\n\nexport * from './rest';\nexport * from './data';\nexport * from './cache';\nexport * from './auth_state';\n","\nimport {\n    IRestProvider,\n    IRestService,\n} from './IRestService';\n\nclass RestResourceConfig {\n    operation: string;\n    name: string;\n    path: string;\n    defaultParams: any;\n    actions: any\n};\n\nclass RestService implements IRestService {\n    private _resources: any = {};\n    private _serverUrl: string;\n    private _lockServerUrl: boolean;\n\n    constructor(\n        private $resource: ng.resource.IResourceService,\n        private $http: ng.IHttpService,\n        private $stateParams: ng.ui.IStateParamsService,\n        serverUrl: string,\n        lockServerUrl: boolean,\n        private resourceConfigs: RestResourceConfig[]\n    ) {\n        \"ngInject\";\n\n        this._serverUrl = serverUrl;\n        this._lockServerUrl = lockServerUrl;\n        this.initResources(resourceConfigs);\n    }\n\n    private reInitResource() {\n        this._resources = {};\n        this.initResources(this.resourceConfigs);        \n    }\n\n    private initResources(resourceConfigs: RestResourceConfig[]): void {\n        _.each(resourceConfigs, (resourceConfig) => {\n            let resource: any;\n            switch (resourceConfig.operation) {\n                case 'createResource':\n                    resource = this.createResource(this._serverUrl, resourceConfig.path, resourceConfig.defaultParams, resourceConfig.actions);\n                    break;\n                case 'createOperation':\n                    resource = this.createOperation(this._serverUrl, resourceConfig.path);\n                    break;\n                case 'createCollection':\n                    resource = this.createCollection(this._serverUrl, resourceConfig.path, resourceConfig.defaultParams);\n                    break;\n                case 'createPagedCollection':\n                    resource = this.createPagedCollection(this._serverUrl, resourceConfig.path, resourceConfig.defaultParams);\n\n                    break;\n                case 'createPartyCollection':\n                    resource = this.createPartyCollection(this._serverUrl, resourceConfig.path, resourceConfig.defaultParams);\n                    break;\n            }\n\n            if (resource) {\n                this._resources[resourceConfig.name] = resource;\n            }\n        });\n    }\n\n    private createResource(url: string, path: string, defaultParams?: any, actions?: any) {\n        url = url || this._serverUrl;\n        return this.$resource(this._serverUrl + path, defaultParams, actions);\n    }\n\n    private createOperation(url: string, path: string) {\n        url = url || this._serverUrl;\n        return this.$resource(\n            url + path,\n            {},\n            {\n                call: { method: 'POST' }\n            }\n        );\n    }\n\n    private createCollection(url: string, path: string, defaultParams?: any) {\n        url = url || this._serverUrl;\n        return this.$resource(url + path,\n            defaultParams || { id: '@id' },\n            {\n                update: { method: 'PUT' }\n            }\n        );\n    }\n\n    private createPagedCollection(url: string, path: string, defaultParams?: any) {\n        url = url || this._serverUrl;\n        return this.$resource(url + path,\n            defaultParams || { id: '@id' },\n            {\n                page: { method: 'GET', isArray: false },\n                update: { method: 'PUT' }\n            }\n        );\n    }\n\n    private createPartyCollection(url: string, path: string, paramDefaults?: any) {\n        return this.createPagedCollection(url, path, paramDefaults ||\n            {\n                id: '@id',\n                party_id: '@party_id'\n            }\n        );\n    }\n\n    public get serverUrl(): string {\n        return this._serverUrl;\n    }\n\n    public set serverUrl(value: string) {\n        this._serverUrl = value;\n        this.reInitResource();\n    }\n\n    public get lockServerUrl(): boolean {\n        return this._lockServerUrl;\n    }\n\n    public set lockServerUrl(value: boolean) {\n        this._lockServerUrl = value;\n    }\n\n    public setHeaders(headers: any) {\n        for (let header in headers) {\n            if (headers.hasOwnProperty(header) && !_.isObject(headers[header])) {\n                this.$http.defaults.headers.common[header] = headers[header];\n            }\n        }\n    }\n\n    public getResource(name: string): any {\n        let resource = this._resources[name];\n        if (!resource)\n            throw new Error('Resource not found');\n\n        return resource;\n    }\n\n}\n\nclass RestProvider implements IRestProvider {\n    private _service: IRestService;\n\n    private _http: ng.IHttpProvider;\n    private _serverUrl: string;\n    private _lockServerUrl: boolean;\n    private _resourceConfigs: RestResourceConfig[] = [];\n\n    constructor($httpProvider: ng.IHttpProvider) {\n        this._http = $httpProvider;\n    }\n\n    public get serverUrl(): string {\n        return this._serverUrl;\n    }\n\n    public set serverUrl(value: string) {\n        this._serverUrl = value;\n    }\n\n    public get lockServerUrl(): boolean {\n        return this._lockServerUrl;\n    }\n\n    public set lockServerUrl(value: boolean) {\n        this._lockServerUrl = value;\n    }\n\n    public setHeaders(headers: any) {\n        for (let header in headers) {\n            if (headers.hasOwnProperty(header))\n                this._http.defaults.headers.common[header] = headers[header];\n        }\n    }\n\n    public registerResource(name: string, path: string, defaultParams?: any, actions?: any): void {\n        this._resourceConfigs.push({\n            operation: 'createResource',\n            name: name,\n            path: path,\n            defaultParams: defaultParams || null,\n            actions: actions || null\n        });\n    }\n    public registerOperation(name: string, path: string, defaultParams?: any, actions?: any): void {\n        this._resourceConfigs.push({\n            operation: 'createOperation',\n            name: name,\n            path: path,\n            defaultParams: defaultParams || null,\n            actions: actions || null\n        });\n    }\n\n    public registerCollection(name: string, path: string, defaultParams?: any, actions?: any): void {\n        this._resourceConfigs.push({\n            operation: 'createCollection',\n            name: name,\n            path: path,\n            defaultParams: defaultParams || null,\n            actions: actions || null\n        });\n    }\n\n    public registerPagedCollection(name: string, path: string, defaultParams?: any, actions?: any): void {\n        this._resourceConfigs.push({\n            operation: 'createPagedCollection',\n            name: name,\n            path: path,\n            defaultParams: defaultParams || null,\n            actions: actions || null\n        });\n    }\n\n    public registerPartyCollection(name: string, path: string, defaultParams?: any, actions?: any): void {\n        this._resourceConfigs.push({\n            operation: 'createPartyCollection',\n            name: name,\n            path: path,\n            defaultParams: defaultParams || null,\n            actions: actions || null\n        });\n    }\n\n    public $get(\n        $resource: ng.resource.IResourceService,\n        $http: ng.IHttpService,\n        $stateParams: angular.ui.IStateParamsService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new RestService($resource, $http, $stateParams, this._serverUrl, this._lockServerUrl, this._resourceConfigs);\n\n        return this._service;\n    }\n}\n\nangular\n    .module('pipRest')\n    .provider('pipRest', RestProvider);\n\n\n","angular\n    .module('pipRest', [ 'ngResource']);\n\n\nimport './IRestService';\nimport './RestService';\n\nexport * from './IRestService';"]}